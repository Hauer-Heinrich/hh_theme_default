name: Replace Strings

on:
  push:
    branches:
      - test-post-init
    paths-ignore:
      - 'README.md'

permissions:
  contents: write
  pull-requests: write # Kann hilfreich sein, auch wenn der Workflow keine PRs erstellt
  actions: write      # Erlaubt dem Workflow, andere Actions zu verwalten
  repository-projects: write # F端r Projektboards
  security-events: write # F端r Security Scanning Ergebnisse
  statuses: write      # F端r das Setzen von Commit-Status
  deployments: write   # F端r Deployment-bezogene Aktionen

jobs:
  replace_strings:
    if: github.repository == 'Hauer-Heinrich/hh_theme_default'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: get epository name
        run: echo "value=`basename ${{ github.repository }}`" >> $GITHUB_OUTPUT

      - name: Replace strings
        run: |
          find . -type f -not -path "./.git/*" -not -path "./.github/*" -not -name "README.md" -print0 |
          while IFS= read -r -d $'\0' file; do
            awk '
            {
              # nur ersetzen, wenn NICHT "HauerHeinrich/HhThemeDefault" vorkommt
              # bzw. nicht "HauerHeinrich/" direkt gefolgt von "HhThemeDefault"
              if ($0 ~ /HauerHeinrich\/HhThemeDefault/) {
                print
              } else {
                gsub(/HauerHeinrich/, "{{EXTENSION_VENDOR}}")
                gsub(/HhThemeDefault/, "{{EXTENSION_NAMESPACE}}")
                print
              }
            }' "$file" > "$file.tmp" && mv "$file.tmp" "$file"
          done
      - name: Configure Git
        run: |
          git config --local user.email "actions@github.com"
          git config --local user.name "GitHub Actions"

      - name: Commit and push changes
        run: |
          git add .
          git commit -m "Replace placeholder strings"
          git push origin test-post-init
